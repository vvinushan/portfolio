//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarInsuranceDataInterface.WCFServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDetails", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarMakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarMake {
            get {
                return this.CarMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.CarMakeField, value) != true)) {
                    this.CarMakeField = value;
                    this.RaisePropertyChanged("CarMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarModel {
            get {
                return this.CarModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CarModelField, value) != true)) {
                    this.CarModelField = value;
                    this.RaisePropertyChanged("CarModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdYear {
            get {
                return this.ProdYearField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdYearField, value) != true)) {
                    this.ProdYearField = value;
                    this.RaisePropertyChanged("ProdYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RegDateField, value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TownCity {
            get {
                return this.TownCityField;
            }
            set {
                if ((object.ReferenceEquals(this.TownCityField, value) != true)) {
                    this.TownCityField = value;
                    this.RaisePropertyChanged("TownCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        CarInsuranceDataInterface.WCFServiceReference.CompositeType GetDataUsingDataContract(CarInsuranceDataInterface.WCFServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CompositeType> GetDataUsingDataContractAsync(CarInsuranceDataInterface.WCFServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCustomer", ReplyAction="http://tempuri.org/IService1/AddCustomerResponse")]
        bool AddCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCustomer", ReplyAction="http://tempuri.org/IService1/AddCustomerResponse")]
        System.Threading.Tasks.Task<bool> AddCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomers", ReplyAction="http://tempuri.org/IService1/GetAllCustomersResponse")]
        CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomers", ReplyAction="http://tempuri.org/IService1/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCustomer", ReplyAction="http://tempuri.org/IService1/DeleteCustomerResponse")]
        bool DeleteCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCustomer", ReplyAction="http://tempuri.org/IService1/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<bool> DeleteCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchCustomers", ReplyAction="http://tempuri.org/IService1/SearchCustomersResponse")]
        CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[] SearchCustomers(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails returnedCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchCustomers", ReplyAction="http://tempuri.org/IService1/SearchCustomersResponse")]
        System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[]> SearchCustomersAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails returnedCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomer", ReplyAction="http://tempuri.org/IService1/UpdateCustomerResponse")]
        bool UpdateCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCustomer", ReplyAction="http://tempuri.org/IService1/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<bool> UpdateCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CarInsuranceDataInterface.WCFServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CarInsuranceDataInterface.WCFServiceReference.IService1>, CarInsuranceDataInterface.WCFServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public CarInsuranceDataInterface.WCFServiceReference.CompositeType GetDataUsingDataContract(CarInsuranceDataInterface.WCFServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CompositeType> GetDataUsingDataContractAsync(CarInsuranceDataInterface.WCFServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AddCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> AddCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public bool DeleteCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customerId) {
            return base.Channel.DeleteCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customerId) {
            return base.Channel.DeleteCustomerAsync(customerId);
        }
        
        public CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[] SearchCustomers(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails returnedCustomer) {
            return base.Channel.SearchCustomers(returnedCustomer);
        }
        
        public System.Threading.Tasks.Task<CarInsuranceDataInterface.WCFServiceReference.CustomerDetails[]> SearchCustomersAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails returnedCustomer) {
            return base.Channel.SearchCustomersAsync(returnedCustomer);
        }
        
        public bool UpdateCustomer(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer) {
            return base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCustomerAsync(CarInsuranceDataInterface.WCFServiceReference.CustomerDetails customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
    }
}
